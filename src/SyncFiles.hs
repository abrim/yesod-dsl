module SyncFiles (syncFiles) where
import Prelude hiding (readFile)
import System.IO.Strict
import Control.Monad
import Data.String.Utils


delim :: String
delim = "-- LINES BELOW GENERATED BY yesod-generated-rest --\n"

    
syncFiles :: [(FilePath,String,Bool)] -> IO ()
syncFiles files = forM_ files (\(path,content,append) -> do
    oldContent <- catch (readFile path) (\_ -> return "")
    let parts = split delim oldContent
    let content' | append = head parts ++ delim ++ content | otherwise = content
        
    if content' /= oldContent
        then do
            putStrLn $ "Updating    " ++ path
            writeFile path content'
        else
            return ())
    
