-- other files can be included for increased modularity
-- import "module.def";

-- class defines a set of fields that can be inherited by an entity
class Named {
    name Text check nonempty;
}

class Versioned {
    version Maybe Int64; 
}

-- User-entity is an instance of the classes Named and Versioned
entity Person : Named, Versioned {
    language Text check validLanguage;
    timezone Text check validTimezone;

    -- service definitions start here
    get { 
        -- GET service does not require authentication
        public;

        -- pre-hooks can be used to check if a particular
        -- record can be retrieved
        pre-hook personGetAllowed;

        -- post-hooks are run at the end of the handler
        post-hook logPersonGet;

        -- ExtJS compatible filtering and sorting parameters
        -- can be generated by including the following keyword
        default-filter-sort; 

        -- additional user-supplied filtering and sorting functions can be added
        filter filterPersons;
        select-opts sortPersons;
    }
    post {}
    delete {}
    put {}
    validate {
        -- validate is like post-handler but does not 
        -- insert the entity to database
    }
}

entity Note : Named, Versioned {
    owner   Person;
    body    Text;
    created DateTime;
    get { 
    }
    post {}
    delete {}
    put {}
    validate {}
}

entity FileItem : Named {
    owner Person;
    path Text;

    -- uniqueness definitions are supported
    unique OwnerName owner name;

    -- entity-wide check functions can be added, too
    check validFileItem;
}

entity ChangeRecord {
    field    Text;
    oldValue Text;
    newValue Text;
    time     DateTime;
    version  Int64;

    -- a polymorphic relation which will be expanded to a number of fields
    -- pointing a each possible entity that is an instance of Versioned
    'entity' Maybe Versioned;
}
